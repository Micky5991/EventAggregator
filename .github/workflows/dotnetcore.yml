name: .NET Core

on:

  push:
    branches:
      - '*'
    tags:
      - '*.*.*'

  pull_request:
    branches:
      - '*'


jobs:
  variables:
    runs-on: ubuntu-latest
    name: Create variables
    outputs:
      istag: ${{ steps.vars.outputs.is_tag }}
      ref: ${{ steps.vars.outputs.ref }}

    steps:

      - id: vars
        run: |
          echo "ref=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
          echo "is_tag=${{ startsWith(github.ref, 'refs/tags/') }}" >> $GITHUB_OUTPUT

  build:
    name: Build Package
    needs: variables

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]


    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET versions
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          8.0.x
          9.0.x

    - name: Install dependencies
      run: dotnet restore

    - name: Build
      if: needs.variables.outputs.istag == 'false'
      run: dotnet build --configuration Release --no-restore

    - name: Build with version ${{ needs.variables.outputs.ref }}
      if: needs.variables.outputs.istag == 'true'
      run: dotnet build --configuration Release --no-restore -p:Version=${{ needs.variables.outputs.ref }} -p:PackageVersion=${{ needs.variables.outputs.ref }}

    - name: Test
      run: dotnet test -v normal

    - name: Save NuGet artifact
      if: success() && needs.variables.outputs.istag == 'true' && matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v3
      with:
        name: nuget-package
        path: EventAggregator/bin/Release/Micky5991.EventAggregator.${{ needs.variables.outputs.ref }}.nupkg

  release:
    runs-on: ubuntu-latest
    needs: [ variables, build ]
    if: needs.build.result == 'success' && needs.variables.outputs.istag == 'true'

    steps:

      - uses: actions/download-artifact@v4
        with:
          name: nuget-package
          path: artifacts/

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          name: V${{ github.ref }}
          draft: true
          prerelease: false
          files: |
            artifacts/Micky5991.EventAggregator.${{ needs.variables.outputs.ref }}.nupkg
